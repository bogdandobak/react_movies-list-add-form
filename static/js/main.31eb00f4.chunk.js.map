{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","validator","NewMovie","state","errors","isTitle","isImdbId","isButtonDisable","handleChange","event","target","name","value","setState","handleSubmit","preventDefault","onAdd","props","test","prevState","this","Form","onSubmit","success","Group","widths","Input","transparent","placeholder","type","error","content","pointing","onChange","TextArea","Button","disabled","React","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"8xEAIaA,G,qBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,8BCtBJK,EAEF,qKAESC,EAAb,4MACEC,MAAQ,CACNjB,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRI,OAAQ,CACNf,SAAS,EACTD,QAAQ,EACRiB,SAAS,EACTC,UAAU,EACVC,iBAAiB,IAZvB,EAiBEC,aAAe,SAACC,GAAW,IAAD,IACAA,EAAMC,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MAEd,EAAKC,UAAL,mBACGF,EAAOC,GADV,uBAEU,CACNL,iBAAiB,IAHrB,KApBJ,EA4BEO,aAAe,SAACL,GACdA,EAAMM,iBADkB,IAEhBC,EAAU,EAAKC,MAAfD,MAFgB,EASpB,EAAKb,MALPjB,EAJsB,EAItBA,MACAC,EALsB,EAKtBA,YACAC,EANsB,EAMtBA,OACAC,EAPsB,EAOtBA,QACAW,EARsB,EAQtBA,OAGGC,EAAUiB,KAAK7B,GAWfY,EAAUiB,KAAK9B,GAYjBF,GACGE,GACAC,GACAW,GAeN,EAAKa,SAAS,CACZ3B,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTW,OAAQ,GACRI,OAAQ,CACNf,SAAS,EACTD,QAAQ,EACRiB,SAAS,EACTC,UAAU,KAYdU,EARc,CACZ9B,QACAC,cACAC,SACAC,UACAW,YAhCA,EAAKa,UAAS,SAAAM,GAAS,MAAK,CAC1Bf,OAAQ,CACNJ,QAASmB,EAAUnB,OACnBX,SAAS,EACTH,OAAQiC,EAAUjC,MAClBE,QAAS+B,EAAU/B,OACnBmB,iBAAiB,OAtBrB,EAAKM,SAAS,CACZT,OAAQ,CACNhB,QAAQ,EACRmB,iBAAiB,KAdrB,EAAKM,SAAS,CACZT,OAAQ,CACNf,SAAS,EACTkB,iBAAiB,MA3C3B,4CAyGE,WAAU,IAAD,EAQHa,KAAKjB,MANPjB,EAFK,EAELA,MACAC,EAHK,EAGLA,YACAC,EAJK,EAILA,OACAC,EALK,EAKLA,QACAW,EANK,EAMLA,OACAI,EAPK,EAOLA,OAGF,OACE,kBAACiB,EAAA,EAAD,CACEC,SAAUF,KAAKN,aACfS,SAAO,GAEP,kBAACF,EAAA,EAAKG,MAAN,CAAYC,OAAO,SACjB,kBAACJ,EAAA,EAAKK,MAAN,CACEC,aAAW,EACXC,YAAY,QACZC,KAAK,OACLlB,KAAK,QACLmB,MAAO1B,EAAOlB,OAAS,CACrB6C,QAAS,qBACTC,SAAU,SAEZpB,MAAO1B,EACP+C,SAAUb,KAAKZ,gBAGnB,kBAAC0B,EAAA,EAAD,CACEN,YAAY,cACZjB,KAAK,cACLC,MAAOzB,EACP8C,SAAUb,KAAKZ,eAEjB,kBAACa,EAAA,EAAKG,MAAN,CAAYC,OAAO,SACjB,kBAACJ,EAAA,EAAKK,MAAN,CACEC,aAAW,EACXC,YAAY,SACZC,KAAK,OACLlB,KAAK,SACLC,MAAOxB,EACP0C,OAAQ7B,EAAUiB,KAAK9B,IAAW,CAChC2C,QAAS,2BACTC,SAAU,SAEZC,SAAUb,KAAKZ,eAEjB,kBAACa,EAAA,EAAKK,MAAN,CACEC,aAAW,EACXC,YAAY,UACZC,KAAK,OACLlB,KAAK,UACLC,MAAOvB,EACPyC,OAAQ7B,EAAUiB,KAAK7B,IAAY,CACjC0C,QAAS,2BACTC,SAAU,SAEZC,SAAUb,KAAKZ,gBAGnB,kBAACa,EAAA,EAAKK,MAAN,CACEC,aAAW,EACXC,YAAY,SACZC,KAAK,OACLlB,KAAK,SACLC,MAAOZ,EACP8B,MAAO1B,EAAOJ,QAAU,CACtB+B,QAAS,uBACTC,SAAU,SAEZC,SAAUb,KAAKZ,eAGjB,kBAACa,EAAA,EAAKc,OAAN,CAAaC,UAAqC,IAA3BhC,EAAOG,iBAA9B,iBAnLR,GAA8B8B,IAAMC,W,SCFvBC,EAAb,4MACEpC,MAAQ,CACNP,OAAQ4C,GAFZ,EAKEC,SAAW,SAAC3C,GACV,EAAKe,UAAS,SAAAM,GAAS,MAAK,CAC1BvB,OAAO,GAAD,mBAAMuB,EAAUvB,QAAhB,CAAwBE,SAPpC,4CAWE,WAAU,IACAF,EAAWwB,KAAKjB,MAAhBP,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,4CAGA,kBAAC,EAAD,CAAU0B,MAAOI,KAAKqB,iBAvBhC,GAAyBH,a,OCAzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.31eb00f4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, TextArea } from 'semantic-ui-react';\n\nconst validator\n  // eslint-disable-next-line max-len\n  = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nexport class NewMovie extends React.Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    errors: {\n      imdbUrl: false,\n      imgUrl: false,\n      isTitle: false,\n      isImdbId: false,\n      isButtonDisable: false,\n    },\n\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      errors: {\n        isButtonDisable: false,\n      },\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { onAdd } = this.props;\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    if (!validator.test(imdbUrl)) {\n      this.setState({\n        errors: {\n          imdbUrl: true,\n          isButtonDisable: true,\n        },\n      });\n\n      return;\n    }\n\n    if (!validator.test(imgUrl)) {\n      this.setState({\n        errors: {\n          imgUrl: true,\n          isButtonDisable: true,\n        },\n      });\n\n      return;\n    }\n\n    if (\n      !title\n      || !imgUrl\n      || !imdbUrl\n      || !imdbId\n    ) {\n      this.setState(prevState => ({\n        errors: {\n          imdbId: !prevState.imdbId,\n          imdbUrl: true,\n          title: !prevState.title,\n          imgUrl: !prevState.imgUrl,\n          isButtonDisable: true,\n        },\n      }));\n\n      return;\n    }\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      errors: {\n        imdbUrl: false,\n        imgUrl: false,\n        isTitle: false,\n        isImdbId: false,\n      },\n    });\n\n    const movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(movie);\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errors,\n    } = this.state;\n\n    return (\n      <Form\n        onSubmit={this.handleSubmit}\n        success\n      >\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            transparent\n            placeholder=\"Title\"\n            type=\"text\"\n            name=\"title\"\n            error={errors.title && {\n              content: 'Please enter title',\n              pointing: 'below',\n            }}\n            value={title}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <TextArea\n          placeholder=\"Description\"\n          name=\"description\"\n          value={description}\n          onChange={this.handleChange}\n        />\n        <Form.Group widths=\"equal\">\n          <Form.Input\n            transparent\n            placeholder=\"ImgUrl\"\n            type=\"text\"\n            name=\"imgUrl\"\n            value={imgUrl}\n            error={!validator.test(imgUrl) && {\n              content: 'Please enter a valid url',\n              pointing: 'below',\n            }}\n            onChange={this.handleChange}\n          />\n          <Form.Input\n            transparent\n            placeholder=\"ImdbUrl\"\n            type=\"text\"\n            name=\"imdbUrl\"\n            value={imdbUrl}\n            error={!validator.test(imdbUrl) && {\n              content: 'Please enter a valid url',\n              pointing: 'below',\n            }}\n            onChange={this.handleChange}\n          />\n        </Form.Group>\n        <Form.Input\n          transparent\n          placeholder=\"ImdbId\"\n          type=\"text\"\n          name=\"imdbId\"\n          value={imdbId}\n          error={errors.imdbId && {\n            content: 'Please enter imdb Id',\n            pointing: 'below',\n          }}\n          onChange={this.handleChange}\n        />\n\n        <Form.Button disabled={errors.isButtonDisable === true}>\n          Add Film\n        </Form.Button>\n      </Form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <h1>\n            Add new film\n          </h1>\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}